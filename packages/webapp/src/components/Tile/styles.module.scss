/*
 *  Copyright 2023 LiteFarm.org
 *  This file is part of LiteFarm.
 *
 *  LiteFarm is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  LiteFarm is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details, see <https://www.gnu.org/licenses/>.
 */

@import '../../assets/mixin';

.typeContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border: 1px solid #e8f0eb;
  box-shadow: 0 2px 10px #ededed;
  border-radius: 4px;
  width: 24.4vw;
  height: 24.4vw;
  padding: 0 4px;
  overflow: hidden;
  cursor: pointer;
  text-align: center;

  svg {
    width: 13.3vw;
    height: 13.3vw;
    margin-bottom: 4px;
  }

  font-size: 3.3vw;
  line-height: 4.4vw;
  color: var(--fontColor);
  font-family: 'Open Sans', 'SansSerif', serif;
}

.typeContainerSelected,
.typeContainer:active {
  border-color: var(--teal700);
  background-color: var(--green100);
  color: var(--teal900);
}

@media (hover: hover) {
  .typeContainer:hover {
    border-color: var(--teal700);
    background-color: var(--green100);
    color: var(--teal900);
  }
}

.typeLabelContainer {
  @include truncateText(2);
}

.matrixContainer {
  width: 100%;
  display: inline-flex;
  flex-flow: row wrap;
  row-gap: 6.6vw;

  --emptySpace: calc(26.8vw - 48px);
  --gap: calc(var(--emptySpace) / 2);
  column-gap: var(--gap);
}

@media only screen and (min-width: 480px) {
  .matrixContainer {
    row-gap: 5.2vw;
    --emptySpace: calc(23.76vw - 48px);
    --gap: calc(var(--emptySpace) / 3);
    column-gap: var(--gap);
  }
  .typeContainer {
    width: 19.06vw;
    height: 19.06vw;

    svg {
      width: 10.4vw;
      height: 10.4vw;
    }

    font-size: 2.6vw;
    line-height: 3.47vw;
  }
}

@media only screen and (min-width: 600px) {
  .matrixContainer {
    justify-content: flex-start;

    --emptySpace: calc(100% - 472px);
    --gap: calc(var(--emptySpace) / 3);
    column-gap: var(--gap);
    row-gap: 24px;
  }

  .typeContainer {
    width: 118px;
    height: 118px;

    svg {
      width: 60px;
      height: 60px;
    }

    font-size: 14px;
    line-height: 20px;
  }
}

@media only screen and (min-width: 734px) {
  .matrixContainer {
    --emptySpace: calc(100% - 590px);
    --gap: calc(var(--emptySpace) / 4);
    column-gap: var(--gap);
  }
}

@media only screen and (min-width: 876px) {
  .matrixContainer {
    --emptySpace: calc(100% - 708px);
    --gap: calc(var(--emptySpace) / 5);
    column-gap: var(--gap);
  }
}

@media only screen and (min-width: 1024px) {
  .matrixContainer {
    gap: 25px
  }
}

.labelIconInfoTile {
  font-weight: 600;
  padding: 14px 10px;

  div, p {
    @include truncateText(1);
  }
}

.tilesWrapper {
  overflow-y: auto;
}

// media query should be set in the component
.swipable {
  flex-wrap: nowrap;
  gap: 16px;

  .labelIconInfoTile {
    flex-shrink: 0;
    width: 88px;
    height: 110px;
    font-size: 12px;
    line-height: 16px;
    padding-bottom: 12px;

    svg {
      width: 48px;
      height: 48px;
    }
    p {
      margin-top: 2px;
      font-size: 10px;
      line-height: 12px;
    }
  }
}
