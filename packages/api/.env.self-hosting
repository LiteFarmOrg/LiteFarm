# Variables for self-hosting configuration

NODE_ENV=production
TZ=UTC
PORT=5001

# Public URL of the API
#API_PUBLIC_URL=https://api.litefarm.my.domain

# Public URL of the webapp
#HOME_PUBLIC_URL=https://litefarm.my.domain

# Database connection settings
DATABASE_HOST=localhost
DATABASE=pg-litefarm
DATABASE_USER=postgres
DATABASE_PASSWORD=postgres
DATABASE_PORT=5432

# S3 Storage configuration
#S3_ENDPOINT=https://nyc3.digitaloceanspaces.com
#S3_ENDPOINT_BUCKET=https://${bucket}.nyc3.digitaloceanspaces.com
#S3_PUBLIC_BUCKET_NAME=litefarmapp
#S3_PRIVATE_BUCKET_NAME=litefarm-app-secret
#S3_REGION=us-east-1
#S3_ACCESS_KEY_ID=?
#S3_SECRET_ACCESS_KEY=?
#S3_FORCE_PATH_STYLE=true

# Imaginary URL
#LOCAL_IMAGINARY=https://image.litefarm.org


JWT_SECRET=This_will_(really)_work
JWT_INVITE_SECRET=Any_arbitrary_string_will_do
JWT_RESET_SECRET=Production_is_secured_with_a_long_random_string
JWT_FARM_SECRET=Here_we_can_use_friendly_explanations
JWT_SCHEDULER_SECRET=Another_token_was_needed_for_the_scheduler

# Email configuration (SMTP)
#EMAIL_TRANSPORT_HOST=smtp.server.com
#EMAIL_TRANSPORT_PORT=465
#EMAIL_TRANSPORT_SECURE=true
#EMAIL_TRANSPORT_SERVICE=smtp
#EMAIL_TRANSPORT_USER=?
#EMAIL_TRANSPORT_PASSWORD=?

# From name
#EMAIL_SENDER=system@litefarm.org
# Support email
#EMAIL_SUPPORT=support@litefarm.org

# Create your own (free in most cases) Google API key at https://console.cloud.google.com/apis/dashboard
# (Optional) We use google-maps-services-js package so API services on this key can be restricted to APIs listed here:
#  > https://www.npmjs.com/package/@googlemaps/google-maps-services-js
# Same as the VITE_GOOGLE_MAPS_API_KEY under webapp
GOOGLE_API_KEY=?

# Currently a Pro/student account is needed for full functionality (e.g sensor charts)
# Most functionality is covered by the free OpenWeather API key at https://openweathermap.org/price
# Note: OpenWeather may take a few hours before the api key is working
# Same as the VITE_WEATHER_API_KEY under webapp
OPEN_WEATHER_APP_ID=?

# Create your own Google API key at https://developers.google.com/identity/oauth2/web/guides/get-google-api-clientid
# (Optional) Authorized javascript origins can be restricted with localhost, and localhost:<port>
# (Optional) If gmail refresh tokens are used (see below): Authorized redirect URI's could be https://developers.google.com/oauthplayground
GOOGLE_OAUTH_CLIENT_ID=?


