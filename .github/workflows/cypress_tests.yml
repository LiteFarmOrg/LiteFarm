name: Test App

on: [push]

jobs:
  build:
    timeout-minutes: 10
    runs-on: macos-12
    env:
      JWT_INVITE_SECRET: ${{secrets.JWT_INVITE_SECRET}}
      JWT_RESET_SECRET: ${{secrets.JWT_RESET_SECRET}}
      JWT_SCHEDULER_SECRET: ${{secrets.JWT_SCHEDULER_SECRET}}
      JWT_SECRET: ${{secrets.JWT_SECRET}}
      TEST_USER: ${{secrets.TEST_USER}}
      TEST_USER_ID: ${{secrets.TEST_USER_ID}}
      DEV_DATABASE_HOST: localhost
      DEV_DATABASE: pg-litefarm
      DEV_DATABASE_USER: postgres
      DEV_DATABASE_PASSWORD: postgres

      
    strategy:
      matrix:
        node-version: [16.14.0]

    steps:
      - uses: ankane/setup-postgres@v1
        with:
          postgres-version: 13
          database: pg-litefarm

      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run API in background
        working-directory: packages/api
        run: |
          psql postgres && CREATE ROLE 'postgres' WITH LOGIN PASSWORD 'postgres'; && \du
          npm install
          npm install express
          npm run migrate:dev:db
          npm run start &
        env:
          PORT: 5000
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Run and test app
        working-directory: packages/webapp
        run: |
          pnpm install --no-frozen-lockfile
          npm i @cypress/code-coverage
          pnpm dev &
          pnpm cypress run --browser chrome --spec cypress/e2e/test.spec.js --record --key 2630f414-4914-48b0-907d-aa3a9cc6a30b
          
       
